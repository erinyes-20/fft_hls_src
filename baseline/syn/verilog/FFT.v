// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FFT_FFT,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.186000,HLS_SYN_LAT=144,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1190,HLS_SYN_LUT=2392,HLS_VERSION=2023_2}" *)

module FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_IN_address0,
        data_IN_ce0,
        data_IN_q0,
        data_OUT_address0,
        data_OUT_ce0,
        data_OUT_we0,
        data_OUT_d0,
        data_OUT_q0,
        data_OUT_address1,
        data_OUT_ce1,
        data_OUT_we1,
        data_OUT_d1,
        data_OUT_q1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_pp0_stage0 = 12'd2;
parameter    ap_ST_fsm_state5 = 12'd4;
parameter    ap_ST_fsm_state6 = 12'd8;
parameter    ap_ST_fsm_state7 = 12'd16;
parameter    ap_ST_fsm_state8 = 12'd32;
parameter    ap_ST_fsm_state9 = 12'd64;
parameter    ap_ST_fsm_state10 = 12'd128;
parameter    ap_ST_fsm_state11 = 12'd256;
parameter    ap_ST_fsm_state12 = 12'd512;
parameter    ap_ST_fsm_state13 = 12'd1024;
parameter    ap_ST_fsm_state14 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] data_IN_address0;
output   data_IN_ce0;
input  [31:0] data_IN_q0;
output  [4:0] data_OUT_address0;
output   data_OUT_ce0;
output   data_OUT_we0;
output  [31:0] data_OUT_d0;
input  [31:0] data_OUT_q0;
output  [4:0] data_OUT_address1;
output   data_OUT_ce1;
output   data_OUT_we1;
output  [31:0] data_OUT_d1;
input  [31:0] data_OUT_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_IN_ce0;
reg[4:0] data_OUT_address0;
reg data_OUT_ce0;
reg data_OUT_we0;
reg[31:0] data_OUT_d0;
reg[4:0] data_OUT_address1;
reg data_OUT_ce1;
reg data_OUT_we1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] rev_32_address0;
reg    rev_32_ce0;
wire   [4:0] rev_32_q0;
wire   [63:0] zext_ln38_fu_206_p1;
reg   [63:0] zext_ln38_reg_231;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] zext_ln38_reg_231_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln38_fu_194_p2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] s1_M_real_address0;
reg    s1_M_real_ce0;
reg    s1_M_real_we0;
wire   [15:0] s1_M_real_q0;
reg   [4:0] s1_M_real_address1;
reg    s1_M_real_ce1;
reg    s1_M_real_we1;
wire   [15:0] s1_M_real_q1;
reg   [4:0] s1_M_imag_address0;
reg    s1_M_imag_ce0;
reg    s1_M_imag_we0;
wire   [15:0] s1_M_imag_q0;
reg   [4:0] s1_M_imag_address1;
reg    s1_M_imag_ce1;
reg    s1_M_imag_we1;
wire   [15:0] s1_M_imag_q1;
reg   [4:0] s2_M_real_address0;
reg    s2_M_real_ce0;
reg    s2_M_real_we0;
wire   [15:0] s2_M_real_q0;
reg   [4:0] s2_M_real_address1;
reg    s2_M_real_ce1;
reg    s2_M_real_we1;
wire   [15:0] s2_M_real_q1;
reg   [4:0] s2_M_imag_address0;
reg    s2_M_imag_ce0;
reg    s2_M_imag_we0;
wire   [15:0] s2_M_imag_q0;
reg   [4:0] s2_M_imag_address1;
reg    s2_M_imag_ce1;
reg    s2_M_imag_we1;
wire   [15:0] s2_M_imag_q1;
reg   [4:0] s3_M_real_address0;
reg    s3_M_real_ce0;
reg    s3_M_real_we0;
wire   [15:0] s3_M_real_q0;
reg   [4:0] s3_M_real_address1;
reg    s3_M_real_ce1;
reg    s3_M_real_we1;
wire   [15:0] s3_M_real_q1;
reg   [4:0] s3_M_imag_address0;
reg    s3_M_imag_ce0;
reg    s3_M_imag_we0;
wire   [15:0] s3_M_imag_q0;
reg   [4:0] s3_M_imag_address1;
reg    s3_M_imag_ce1;
reg    s3_M_imag_we1;
wire   [15:0] s3_M_imag_q1;
reg   [4:0] s4_M_real_address0;
reg    s4_M_real_ce0;
reg    s4_M_real_we0;
wire   [15:0] s4_M_real_q0;
reg   [4:0] s4_M_real_address1;
reg    s4_M_real_ce1;
reg    s4_M_real_we1;
wire   [15:0] s4_M_real_q1;
reg   [4:0] s4_M_imag_address0;
reg    s4_M_imag_ce0;
reg    s4_M_imag_we0;
wire   [15:0] s4_M_imag_q0;
reg   [4:0] s4_M_imag_address1;
reg    s4_M_imag_ce1;
reg    s4_M_imag_we1;
wire   [15:0] s4_M_imag_q1;
wire    grp_FFT_stage_fu_138_ap_start;
wire    grp_FFT_stage_fu_138_ap_done;
wire    grp_FFT_stage_fu_138_ap_idle;
wire    grp_FFT_stage_fu_138_ap_ready;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_address0;
wire    grp_FFT_stage_fu_138_data_OUT_ce0;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_address1;
wire    grp_FFT_stage_fu_138_data_OUT_ce1;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_M_real_address0;
wire    grp_FFT_stage_fu_138_data_OUT_M_real_ce0;
wire    grp_FFT_stage_fu_138_data_OUT_M_real_we0;
wire   [15:0] grp_FFT_stage_fu_138_data_OUT_M_real_d0;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_M_real_address1;
wire    grp_FFT_stage_fu_138_data_OUT_M_real_ce1;
wire    grp_FFT_stage_fu_138_data_OUT_M_real_we1;
wire   [15:0] grp_FFT_stage_fu_138_data_OUT_M_real_d1;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_M_imag_address0;
wire    grp_FFT_stage_fu_138_data_OUT_M_imag_ce0;
wire    grp_FFT_stage_fu_138_data_OUT_M_imag_we0;
wire   [15:0] grp_FFT_stage_fu_138_data_OUT_M_imag_d0;
wire   [4:0] grp_FFT_stage_fu_138_data_OUT_M_imag_address1;
wire    grp_FFT_stage_fu_138_data_OUT_M_imag_ce1;
wire    grp_FFT_stage_fu_138_data_OUT_M_imag_we1;
wire   [15:0] grp_FFT_stage_fu_138_data_OUT_M_imag_d1;
wire    grp_FFT_stage_1_fu_146_ap_start;
wire    grp_FFT_stage_1_fu_146_ap_done;
wire    grp_FFT_stage_1_fu_146_ap_idle;
wire    grp_FFT_stage_1_fu_146_ap_ready;
wire   [4:0] grp_FFT_stage_1_fu_146_data_IN_M_real_address0;
wire    grp_FFT_stage_1_fu_146_data_IN_M_real_ce0;
wire   [4:0] grp_FFT_stage_1_fu_146_data_IN_M_real_address1;
wire    grp_FFT_stage_1_fu_146_data_IN_M_real_ce1;
wire   [4:0] grp_FFT_stage_1_fu_146_data_IN_M_imag_address0;
wire    grp_FFT_stage_1_fu_146_data_IN_M_imag_ce0;
wire   [4:0] grp_FFT_stage_1_fu_146_data_IN_M_imag_address1;
wire    grp_FFT_stage_1_fu_146_data_IN_M_imag_ce1;
wire   [4:0] grp_FFT_stage_1_fu_146_data_OUT_M_real_address0;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_real_ce0;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_real_we0;
wire   [15:0] grp_FFT_stage_1_fu_146_data_OUT_M_real_d0;
wire   [4:0] grp_FFT_stage_1_fu_146_data_OUT_M_real_address1;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_real_ce1;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_real_we1;
wire   [15:0] grp_FFT_stage_1_fu_146_data_OUT_M_real_d1;
wire   [4:0] grp_FFT_stage_1_fu_146_data_OUT_M_imag_address0;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce0;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_imag_we0;
wire   [15:0] grp_FFT_stage_1_fu_146_data_OUT_M_imag_d0;
wire   [4:0] grp_FFT_stage_1_fu_146_data_OUT_M_imag_address1;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce1;
wire    grp_FFT_stage_1_fu_146_data_OUT_M_imag_we1;
wire   [15:0] grp_FFT_stage_1_fu_146_data_OUT_M_imag_d1;
wire    grp_FFT_stage_2_fu_154_ap_start;
wire    grp_FFT_stage_2_fu_154_ap_done;
wire    grp_FFT_stage_2_fu_154_ap_idle;
wire    grp_FFT_stage_2_fu_154_ap_ready;
wire   [4:0] grp_FFT_stage_2_fu_154_data_IN_M_real_address0;
wire    grp_FFT_stage_2_fu_154_data_IN_M_real_ce0;
wire   [4:0] grp_FFT_stage_2_fu_154_data_IN_M_real_address1;
wire    grp_FFT_stage_2_fu_154_data_IN_M_real_ce1;
wire   [4:0] grp_FFT_stage_2_fu_154_data_IN_M_imag_address0;
wire    grp_FFT_stage_2_fu_154_data_IN_M_imag_ce0;
wire   [4:0] grp_FFT_stage_2_fu_154_data_IN_M_imag_address1;
wire    grp_FFT_stage_2_fu_154_data_IN_M_imag_ce1;
wire   [4:0] grp_FFT_stage_2_fu_154_data_OUT_M_real_address0;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_real_ce0;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_real_we0;
wire   [15:0] grp_FFT_stage_2_fu_154_data_OUT_M_real_d0;
wire   [4:0] grp_FFT_stage_2_fu_154_data_OUT_M_real_address1;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_real_ce1;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_real_we1;
wire   [15:0] grp_FFT_stage_2_fu_154_data_OUT_M_real_d1;
wire   [4:0] grp_FFT_stage_2_fu_154_data_OUT_M_imag_address0;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce0;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_imag_we0;
wire   [15:0] grp_FFT_stage_2_fu_154_data_OUT_M_imag_d0;
wire   [4:0] grp_FFT_stage_2_fu_154_data_OUT_M_imag_address1;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce1;
wire    grp_FFT_stage_2_fu_154_data_OUT_M_imag_we1;
wire   [15:0] grp_FFT_stage_2_fu_154_data_OUT_M_imag_d1;
wire    grp_FFT_stage_3_fu_162_ap_start;
wire    grp_FFT_stage_3_fu_162_ap_done;
wire    grp_FFT_stage_3_fu_162_ap_idle;
wire    grp_FFT_stage_3_fu_162_ap_ready;
wire   [4:0] grp_FFT_stage_3_fu_162_data_IN_M_real_address0;
wire    grp_FFT_stage_3_fu_162_data_IN_M_real_ce0;
wire   [4:0] grp_FFT_stage_3_fu_162_data_IN_M_real_address1;
wire    grp_FFT_stage_3_fu_162_data_IN_M_real_ce1;
wire   [4:0] grp_FFT_stage_3_fu_162_data_IN_M_imag_address0;
wire    grp_FFT_stage_3_fu_162_data_IN_M_imag_ce0;
wire   [4:0] grp_FFT_stage_3_fu_162_data_IN_M_imag_address1;
wire    grp_FFT_stage_3_fu_162_data_IN_M_imag_ce1;
wire   [4:0] grp_FFT_stage_3_fu_162_data_OUT_M_real_address0;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_real_ce0;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_real_we0;
wire   [15:0] grp_FFT_stage_3_fu_162_data_OUT_M_real_d0;
wire   [4:0] grp_FFT_stage_3_fu_162_data_OUT_M_real_address1;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_real_ce1;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_real_we1;
wire   [15:0] grp_FFT_stage_3_fu_162_data_OUT_M_real_d1;
wire   [4:0] grp_FFT_stage_3_fu_162_data_OUT_M_imag_address0;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce0;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_imag_we0;
wire   [15:0] grp_FFT_stage_3_fu_162_data_OUT_M_imag_d0;
wire   [4:0] grp_FFT_stage_3_fu_162_data_OUT_M_imag_address1;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce1;
wire    grp_FFT_stage_3_fu_162_data_OUT_M_imag_we1;
wire   [15:0] grp_FFT_stage_3_fu_162_data_OUT_M_imag_d1;
wire    grp_FFT_stage_4_fu_174_ap_start;
wire    grp_FFT_stage_4_fu_174_ap_done;
wire    grp_FFT_stage_4_fu_174_ap_idle;
wire    grp_FFT_stage_4_fu_174_ap_ready;
wire   [4:0] grp_FFT_stage_4_fu_174_data_IN_M_real_address0;
wire    grp_FFT_stage_4_fu_174_data_IN_M_real_ce0;
wire   [4:0] grp_FFT_stage_4_fu_174_data_IN_M_real_address1;
wire    grp_FFT_stage_4_fu_174_data_IN_M_real_ce1;
wire   [4:0] grp_FFT_stage_4_fu_174_data_IN_M_imag_address0;
wire    grp_FFT_stage_4_fu_174_data_IN_M_imag_ce0;
wire   [4:0] grp_FFT_stage_4_fu_174_data_IN_M_imag_address1;
wire    grp_FFT_stage_4_fu_174_data_IN_M_imag_ce1;
wire   [4:0] grp_FFT_stage_4_fu_174_data_OUT_address0;
wire    grp_FFT_stage_4_fu_174_data_OUT_ce0;
wire    grp_FFT_stage_4_fu_174_data_OUT_we0;
wire   [31:0] grp_FFT_stage_4_fu_174_data_OUT_d0;
wire   [4:0] grp_FFT_stage_4_fu_174_data_OUT_address1;
wire    grp_FFT_stage_4_fu_174_data_OUT_ce1;
wire    grp_FFT_stage_4_fu_174_data_OUT_we1;
wire   [31:0] grp_FFT_stage_4_fu_174_data_OUT_d1;
reg    grp_FFT_stage_fu_138_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_FFT_stage_1_fu_146_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_FFT_stage_2_fu_154_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_FFT_stage_3_fu_162_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_FFT_stage_4_fu_174_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln39_fu_216_p1;
reg   [5:0] n_fu_62;
wire   [5:0] add_ln38_fu_200_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_FFT_stage_fu_138_ap_start_reg = 1'b0;
#0 grp_FFT_stage_1_fu_146_ap_start_reg = 1'b0;
#0 grp_FFT_stage_2_fu_154_ap_start_reg = 1'b0;
#0 grp_FFT_stage_3_fu_162_ap_start_reg = 1'b0;
#0 grp_FFT_stage_4_fu_174_ap_start_reg = 1'b0;
#0 n_fu_62 = 6'd0;
end

FFT_rev_32_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rev_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rev_32_address0),
    .ce0(rev_32_ce0),
    .q0(rev_32_q0)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s1_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s1_M_real_address0),
    .ce0(s1_M_real_ce0),
    .we0(s1_M_real_we0),
    .d0(grp_FFT_stage_fu_138_data_OUT_M_real_d0),
    .q0(s1_M_real_q0),
    .address1(s1_M_real_address1),
    .ce1(s1_M_real_ce1),
    .we1(s1_M_real_we1),
    .d1(grp_FFT_stage_fu_138_data_OUT_M_real_d1),
    .q1(s1_M_real_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s1_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s1_M_imag_address0),
    .ce0(s1_M_imag_ce0),
    .we0(s1_M_imag_we0),
    .d0(grp_FFT_stage_fu_138_data_OUT_M_imag_d0),
    .q0(s1_M_imag_q0),
    .address1(s1_M_imag_address1),
    .ce1(s1_M_imag_ce1),
    .we1(s1_M_imag_we1),
    .d1(grp_FFT_stage_fu_138_data_OUT_M_imag_d1),
    .q1(s1_M_imag_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s2_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s2_M_real_address0),
    .ce0(s2_M_real_ce0),
    .we0(s2_M_real_we0),
    .d0(grp_FFT_stage_1_fu_146_data_OUT_M_real_d0),
    .q0(s2_M_real_q0),
    .address1(s2_M_real_address1),
    .ce1(s2_M_real_ce1),
    .we1(s2_M_real_we1),
    .d1(grp_FFT_stage_1_fu_146_data_OUT_M_real_d1),
    .q1(s2_M_real_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s2_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s2_M_imag_address0),
    .ce0(s2_M_imag_ce0),
    .we0(s2_M_imag_we0),
    .d0(grp_FFT_stage_1_fu_146_data_OUT_M_imag_d0),
    .q0(s2_M_imag_q0),
    .address1(s2_M_imag_address1),
    .ce1(s2_M_imag_ce1),
    .we1(s2_M_imag_we1),
    .d1(grp_FFT_stage_1_fu_146_data_OUT_M_imag_d1),
    .q1(s2_M_imag_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s3_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s3_M_real_address0),
    .ce0(s3_M_real_ce0),
    .we0(s3_M_real_we0),
    .d0(grp_FFT_stage_2_fu_154_data_OUT_M_real_d0),
    .q0(s3_M_real_q0),
    .address1(s3_M_real_address1),
    .ce1(s3_M_real_ce1),
    .we1(s3_M_real_we1),
    .d1(grp_FFT_stage_2_fu_154_data_OUT_M_real_d1),
    .q1(s3_M_real_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s3_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s3_M_imag_address0),
    .ce0(s3_M_imag_ce0),
    .we0(s3_M_imag_we0),
    .d0(grp_FFT_stage_2_fu_154_data_OUT_M_imag_d0),
    .q0(s3_M_imag_q0),
    .address1(s3_M_imag_address1),
    .ce1(s3_M_imag_ce1),
    .we1(s3_M_imag_we1),
    .d1(grp_FFT_stage_2_fu_154_data_OUT_M_imag_d1),
    .q1(s3_M_imag_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s4_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s4_M_real_address0),
    .ce0(s4_M_real_ce0),
    .we0(s4_M_real_we0),
    .d0(grp_FFT_stage_3_fu_162_data_OUT_M_real_d0),
    .q0(s4_M_real_q0),
    .address1(s4_M_real_address1),
    .ce1(s4_M_real_ce1),
    .we1(s4_M_real_we1),
    .d1(grp_FFT_stage_3_fu_162_data_OUT_M_real_d1),
    .q1(s4_M_real_q1)
);

FFT_s1_M_real_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
s4_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s4_M_imag_address0),
    .ce0(s4_M_imag_ce0),
    .we0(s4_M_imag_we0),
    .d0(grp_FFT_stage_3_fu_162_data_OUT_M_imag_d0),
    .q0(s4_M_imag_q0),
    .address1(s4_M_imag_address1),
    .ce1(s4_M_imag_ce1),
    .we1(s4_M_imag_we1),
    .d1(grp_FFT_stage_3_fu_162_data_OUT_M_imag_d1),
    .q1(s4_M_imag_q1)
);

FFT_FFT_stage grp_FFT_stage_fu_138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_stage_fu_138_ap_start),
    .ap_done(grp_FFT_stage_fu_138_ap_done),
    .ap_idle(grp_FFT_stage_fu_138_ap_idle),
    .ap_ready(grp_FFT_stage_fu_138_ap_ready),
    .data_OUT_address0(grp_FFT_stage_fu_138_data_OUT_address0),
    .data_OUT_ce0(grp_FFT_stage_fu_138_data_OUT_ce0),
    .data_OUT_q0(data_OUT_q0),
    .data_OUT_address1(grp_FFT_stage_fu_138_data_OUT_address1),
    .data_OUT_ce1(grp_FFT_stage_fu_138_data_OUT_ce1),
    .data_OUT_q1(data_OUT_q1),
    .data_OUT_M_real_address0(grp_FFT_stage_fu_138_data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(grp_FFT_stage_fu_138_data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(grp_FFT_stage_fu_138_data_OUT_M_real_we0),
    .data_OUT_M_real_d0(grp_FFT_stage_fu_138_data_OUT_M_real_d0),
    .data_OUT_M_real_address1(grp_FFT_stage_fu_138_data_OUT_M_real_address1),
    .data_OUT_M_real_ce1(grp_FFT_stage_fu_138_data_OUT_M_real_ce1),
    .data_OUT_M_real_we1(grp_FFT_stage_fu_138_data_OUT_M_real_we1),
    .data_OUT_M_real_d1(grp_FFT_stage_fu_138_data_OUT_M_real_d1),
    .data_OUT_M_imag_address0(grp_FFT_stage_fu_138_data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(grp_FFT_stage_fu_138_data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(grp_FFT_stage_fu_138_data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(grp_FFT_stage_fu_138_data_OUT_M_imag_d0),
    .data_OUT_M_imag_address1(grp_FFT_stage_fu_138_data_OUT_M_imag_address1),
    .data_OUT_M_imag_ce1(grp_FFT_stage_fu_138_data_OUT_M_imag_ce1),
    .data_OUT_M_imag_we1(grp_FFT_stage_fu_138_data_OUT_M_imag_we1),
    .data_OUT_M_imag_d1(grp_FFT_stage_fu_138_data_OUT_M_imag_d1)
);

FFT_FFT_stage_1 grp_FFT_stage_1_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_stage_1_fu_146_ap_start),
    .ap_done(grp_FFT_stage_1_fu_146_ap_done),
    .ap_idle(grp_FFT_stage_1_fu_146_ap_idle),
    .ap_ready(grp_FFT_stage_1_fu_146_ap_ready),
    .data_IN_M_real_address0(grp_FFT_stage_1_fu_146_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_FFT_stage_1_fu_146_data_IN_M_real_ce0),
    .data_IN_M_real_q0(s1_M_real_q0),
    .data_IN_M_real_address1(grp_FFT_stage_1_fu_146_data_IN_M_real_address1),
    .data_IN_M_real_ce1(grp_FFT_stage_1_fu_146_data_IN_M_real_ce1),
    .data_IN_M_real_q1(s1_M_real_q1),
    .data_IN_M_imag_address0(grp_FFT_stage_1_fu_146_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_FFT_stage_1_fu_146_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(s1_M_imag_q0),
    .data_IN_M_imag_address1(grp_FFT_stage_1_fu_146_data_IN_M_imag_address1),
    .data_IN_M_imag_ce1(grp_FFT_stage_1_fu_146_data_IN_M_imag_ce1),
    .data_IN_M_imag_q1(s1_M_imag_q1),
    .data_OUT_M_real_address0(grp_FFT_stage_1_fu_146_data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(grp_FFT_stage_1_fu_146_data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(grp_FFT_stage_1_fu_146_data_OUT_M_real_we0),
    .data_OUT_M_real_d0(grp_FFT_stage_1_fu_146_data_OUT_M_real_d0),
    .data_OUT_M_real_address1(grp_FFT_stage_1_fu_146_data_OUT_M_real_address1),
    .data_OUT_M_real_ce1(grp_FFT_stage_1_fu_146_data_OUT_M_real_ce1),
    .data_OUT_M_real_we1(grp_FFT_stage_1_fu_146_data_OUT_M_real_we1),
    .data_OUT_M_real_d1(grp_FFT_stage_1_fu_146_data_OUT_M_real_d1),
    .data_OUT_M_imag_address0(grp_FFT_stage_1_fu_146_data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(grp_FFT_stage_1_fu_146_data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(grp_FFT_stage_1_fu_146_data_OUT_M_imag_d0),
    .data_OUT_M_imag_address1(grp_FFT_stage_1_fu_146_data_OUT_M_imag_address1),
    .data_OUT_M_imag_ce1(grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce1),
    .data_OUT_M_imag_we1(grp_FFT_stage_1_fu_146_data_OUT_M_imag_we1),
    .data_OUT_M_imag_d1(grp_FFT_stage_1_fu_146_data_OUT_M_imag_d1)
);

FFT_FFT_stage_2 grp_FFT_stage_2_fu_154(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_stage_2_fu_154_ap_start),
    .ap_done(grp_FFT_stage_2_fu_154_ap_done),
    .ap_idle(grp_FFT_stage_2_fu_154_ap_idle),
    .ap_ready(grp_FFT_stage_2_fu_154_ap_ready),
    .data_IN_M_real_address0(grp_FFT_stage_2_fu_154_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_FFT_stage_2_fu_154_data_IN_M_real_ce0),
    .data_IN_M_real_q0(s2_M_real_q0),
    .data_IN_M_real_address1(grp_FFT_stage_2_fu_154_data_IN_M_real_address1),
    .data_IN_M_real_ce1(grp_FFT_stage_2_fu_154_data_IN_M_real_ce1),
    .data_IN_M_real_q1(s2_M_real_q1),
    .data_IN_M_imag_address0(grp_FFT_stage_2_fu_154_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_FFT_stage_2_fu_154_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(s2_M_imag_q0),
    .data_IN_M_imag_address1(grp_FFT_stage_2_fu_154_data_IN_M_imag_address1),
    .data_IN_M_imag_ce1(grp_FFT_stage_2_fu_154_data_IN_M_imag_ce1),
    .data_IN_M_imag_q1(s2_M_imag_q1),
    .data_OUT_M_real_address0(grp_FFT_stage_2_fu_154_data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(grp_FFT_stage_2_fu_154_data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(grp_FFT_stage_2_fu_154_data_OUT_M_real_we0),
    .data_OUT_M_real_d0(grp_FFT_stage_2_fu_154_data_OUT_M_real_d0),
    .data_OUT_M_real_address1(grp_FFT_stage_2_fu_154_data_OUT_M_real_address1),
    .data_OUT_M_real_ce1(grp_FFT_stage_2_fu_154_data_OUT_M_real_ce1),
    .data_OUT_M_real_we1(grp_FFT_stage_2_fu_154_data_OUT_M_real_we1),
    .data_OUT_M_real_d1(grp_FFT_stage_2_fu_154_data_OUT_M_real_d1),
    .data_OUT_M_imag_address0(grp_FFT_stage_2_fu_154_data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(grp_FFT_stage_2_fu_154_data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(grp_FFT_stage_2_fu_154_data_OUT_M_imag_d0),
    .data_OUT_M_imag_address1(grp_FFT_stage_2_fu_154_data_OUT_M_imag_address1),
    .data_OUT_M_imag_ce1(grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce1),
    .data_OUT_M_imag_we1(grp_FFT_stage_2_fu_154_data_OUT_M_imag_we1),
    .data_OUT_M_imag_d1(grp_FFT_stage_2_fu_154_data_OUT_M_imag_d1)
);

FFT_FFT_stage_3 grp_FFT_stage_3_fu_162(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_stage_3_fu_162_ap_start),
    .ap_done(grp_FFT_stage_3_fu_162_ap_done),
    .ap_idle(grp_FFT_stage_3_fu_162_ap_idle),
    .ap_ready(grp_FFT_stage_3_fu_162_ap_ready),
    .data_IN_M_real_address0(grp_FFT_stage_3_fu_162_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_FFT_stage_3_fu_162_data_IN_M_real_ce0),
    .data_IN_M_real_q0(s3_M_real_q0),
    .data_IN_M_real_address1(grp_FFT_stage_3_fu_162_data_IN_M_real_address1),
    .data_IN_M_real_ce1(grp_FFT_stage_3_fu_162_data_IN_M_real_ce1),
    .data_IN_M_real_q1(s3_M_real_q1),
    .data_IN_M_imag_address0(grp_FFT_stage_3_fu_162_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_FFT_stage_3_fu_162_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(s3_M_imag_q0),
    .data_IN_M_imag_address1(grp_FFT_stage_3_fu_162_data_IN_M_imag_address1),
    .data_IN_M_imag_ce1(grp_FFT_stage_3_fu_162_data_IN_M_imag_ce1),
    .data_IN_M_imag_q1(s3_M_imag_q1),
    .data_OUT_M_real_address0(grp_FFT_stage_3_fu_162_data_OUT_M_real_address0),
    .data_OUT_M_real_ce0(grp_FFT_stage_3_fu_162_data_OUT_M_real_ce0),
    .data_OUT_M_real_we0(grp_FFT_stage_3_fu_162_data_OUT_M_real_we0),
    .data_OUT_M_real_d0(grp_FFT_stage_3_fu_162_data_OUT_M_real_d0),
    .data_OUT_M_real_address1(grp_FFT_stage_3_fu_162_data_OUT_M_real_address1),
    .data_OUT_M_real_ce1(grp_FFT_stage_3_fu_162_data_OUT_M_real_ce1),
    .data_OUT_M_real_we1(grp_FFT_stage_3_fu_162_data_OUT_M_real_we1),
    .data_OUT_M_real_d1(grp_FFT_stage_3_fu_162_data_OUT_M_real_d1),
    .data_OUT_M_imag_address0(grp_FFT_stage_3_fu_162_data_OUT_M_imag_address0),
    .data_OUT_M_imag_ce0(grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce0),
    .data_OUT_M_imag_we0(grp_FFT_stage_3_fu_162_data_OUT_M_imag_we0),
    .data_OUT_M_imag_d0(grp_FFT_stage_3_fu_162_data_OUT_M_imag_d0),
    .data_OUT_M_imag_address1(grp_FFT_stage_3_fu_162_data_OUT_M_imag_address1),
    .data_OUT_M_imag_ce1(grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce1),
    .data_OUT_M_imag_we1(grp_FFT_stage_3_fu_162_data_OUT_M_imag_we1),
    .data_OUT_M_imag_d1(grp_FFT_stage_3_fu_162_data_OUT_M_imag_d1)
);

FFT_FFT_stage_4 grp_FFT_stage_4_fu_174(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_stage_4_fu_174_ap_start),
    .ap_done(grp_FFT_stage_4_fu_174_ap_done),
    .ap_idle(grp_FFT_stage_4_fu_174_ap_idle),
    .ap_ready(grp_FFT_stage_4_fu_174_ap_ready),
    .data_IN_M_real_address0(grp_FFT_stage_4_fu_174_data_IN_M_real_address0),
    .data_IN_M_real_ce0(grp_FFT_stage_4_fu_174_data_IN_M_real_ce0),
    .data_IN_M_real_q0(s4_M_real_q0),
    .data_IN_M_real_address1(grp_FFT_stage_4_fu_174_data_IN_M_real_address1),
    .data_IN_M_real_ce1(grp_FFT_stage_4_fu_174_data_IN_M_real_ce1),
    .data_IN_M_real_q1(s4_M_real_q1),
    .data_IN_M_imag_address0(grp_FFT_stage_4_fu_174_data_IN_M_imag_address0),
    .data_IN_M_imag_ce0(grp_FFT_stage_4_fu_174_data_IN_M_imag_ce0),
    .data_IN_M_imag_q0(s4_M_imag_q0),
    .data_IN_M_imag_address1(grp_FFT_stage_4_fu_174_data_IN_M_imag_address1),
    .data_IN_M_imag_ce1(grp_FFT_stage_4_fu_174_data_IN_M_imag_ce1),
    .data_IN_M_imag_q1(s4_M_imag_q1),
    .data_OUT_address0(grp_FFT_stage_4_fu_174_data_OUT_address0),
    .data_OUT_ce0(grp_FFT_stage_4_fu_174_data_OUT_ce0),
    .data_OUT_we0(grp_FFT_stage_4_fu_174_data_OUT_we0),
    .data_OUT_d0(grp_FFT_stage_4_fu_174_data_OUT_d0),
    .data_OUT_address1(grp_FFT_stage_4_fu_174_data_OUT_address1),
    .data_OUT_ce1(grp_FFT_stage_4_fu_174_data_OUT_ce1),
    .data_OUT_we1(grp_FFT_stage_4_fu_174_data_OUT_we1),
    .data_OUT_d1(grp_FFT_stage_4_fu_174_data_OUT_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_stage_1_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_FFT_stage_1_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_stage_1_fu_146_ap_ready == 1'b1)) begin
            grp_FFT_stage_1_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_stage_2_fu_154_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_FFT_stage_2_fu_154_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_stage_2_fu_154_ap_ready == 1'b1)) begin
            grp_FFT_stage_2_fu_154_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_stage_3_fu_162_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_FFT_stage_3_fu_162_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_stage_3_fu_162_ap_ready == 1'b1)) begin
            grp_FFT_stage_3_fu_162_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_stage_4_fu_174_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_FFT_stage_4_fu_174_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_stage_4_fu_174_ap_ready == 1'b1)) begin
            grp_FFT_stage_4_fu_174_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_stage_fu_138_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_FFT_stage_fu_138_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_stage_fu_138_ap_ready == 1'b1)) begin
            grp_FFT_stage_fu_138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        n_fu_62 <= 6'd0;
    end else if (((icmp_ln38_fu_194_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_fu_62 <= add_ln38_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln38_reg_231[5 : 0] <= zext_ln38_fu_206_p1[5 : 0];
        zext_ln38_reg_231_pp0_iter1_reg[5 : 0] <= zext_ln38_reg_231[5 : 0];
    end
end

always @ (*) begin
    if ((grp_FFT_stage_2_fu_154_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_stage_3_fu_162_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_stage_4_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_stage_fu_138_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_stage_1_fu_146_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln38_fu_194_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_FFT_stage_4_fu_174_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_FFT_stage_4_fu_174_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_IN_ce0 = 1'b1;
    end else begin
        data_IN_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        data_OUT_address0 = zext_ln38_reg_231_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_address0 = grp_FFT_stage_4_fu_174_data_OUT_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_OUT_address0 = grp_FFT_stage_fu_138_data_OUT_address0;
    end else begin
        data_OUT_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_address1 = grp_FFT_stage_4_fu_174_data_OUT_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_OUT_address1 = grp_FFT_stage_fu_138_data_OUT_address1;
    end else begin
        data_OUT_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_OUT_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_ce0 = grp_FFT_stage_4_fu_174_data_OUT_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_OUT_ce0 = grp_FFT_stage_fu_138_data_OUT_ce0;
    end else begin
        data_OUT_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_ce1 = grp_FFT_stage_4_fu_174_data_OUT_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        data_OUT_ce1 = grp_FFT_stage_fu_138_data_OUT_ce1;
    end else begin
        data_OUT_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        data_OUT_d0 = data_IN_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_d0 = grp_FFT_stage_4_fu_174_data_OUT_d0;
    end else begin
        data_OUT_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_OUT_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_we0 = grp_FFT_stage_4_fu_174_data_OUT_we0;
    end else begin
        data_OUT_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_OUT_we1 = grp_FFT_stage_4_fu_174_data_OUT_we1;
    end else begin
        data_OUT_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rev_32_ce0 = 1'b1;
    end else begin
        rev_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_imag_address0 = grp_FFT_stage_1_fu_146_data_IN_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_address0 = grp_FFT_stage_fu_138_data_OUT_M_imag_address0;
    end else begin
        s1_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_imag_address1 = grp_FFT_stage_1_fu_146_data_IN_M_imag_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_address1 = grp_FFT_stage_fu_138_data_OUT_M_imag_address1;
    end else begin
        s1_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_imag_ce0 = grp_FFT_stage_1_fu_146_data_IN_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_ce0 = grp_FFT_stage_fu_138_data_OUT_M_imag_ce0;
    end else begin
        s1_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_imag_ce1 = grp_FFT_stage_1_fu_146_data_IN_M_imag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_ce1 = grp_FFT_stage_fu_138_data_OUT_M_imag_ce1;
    end else begin
        s1_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_we0 = grp_FFT_stage_fu_138_data_OUT_M_imag_we0;
    end else begin
        s1_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_imag_we1 = grp_FFT_stage_fu_138_data_OUT_M_imag_we1;
    end else begin
        s1_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_real_address0 = grp_FFT_stage_1_fu_146_data_IN_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_address0 = grp_FFT_stage_fu_138_data_OUT_M_real_address0;
    end else begin
        s1_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_real_address1 = grp_FFT_stage_1_fu_146_data_IN_M_real_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_address1 = grp_FFT_stage_fu_138_data_OUT_M_real_address1;
    end else begin
        s1_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_real_ce0 = grp_FFT_stage_1_fu_146_data_IN_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_ce0 = grp_FFT_stage_fu_138_data_OUT_M_real_ce0;
    end else begin
        s1_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s1_M_real_ce1 = grp_FFT_stage_1_fu_146_data_IN_M_real_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_ce1 = grp_FFT_stage_fu_138_data_OUT_M_real_ce1;
    end else begin
        s1_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_we0 = grp_FFT_stage_fu_138_data_OUT_M_real_we0;
    end else begin
        s1_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s1_M_real_we1 = grp_FFT_stage_fu_138_data_OUT_M_real_we1;
    end else begin
        s1_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_imag_address0 = grp_FFT_stage_2_fu_154_data_IN_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_address0 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_address0;
    end else begin
        s2_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_imag_address1 = grp_FFT_stage_2_fu_154_data_IN_M_imag_address1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_address1 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_address1;
    end else begin
        s2_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_imag_ce0 = grp_FFT_stage_2_fu_154_data_IN_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_ce0 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce0;
    end else begin
        s2_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_imag_ce1 = grp_FFT_stage_2_fu_154_data_IN_M_imag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_ce1 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_ce1;
    end else begin
        s2_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_we0 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_we0;
    end else begin
        s2_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_imag_we1 = grp_FFT_stage_1_fu_146_data_OUT_M_imag_we1;
    end else begin
        s2_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_real_address0 = grp_FFT_stage_2_fu_154_data_IN_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_address0 = grp_FFT_stage_1_fu_146_data_OUT_M_real_address0;
    end else begin
        s2_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_real_address1 = grp_FFT_stage_2_fu_154_data_IN_M_real_address1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_address1 = grp_FFT_stage_1_fu_146_data_OUT_M_real_address1;
    end else begin
        s2_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_real_ce0 = grp_FFT_stage_2_fu_154_data_IN_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_ce0 = grp_FFT_stage_1_fu_146_data_OUT_M_real_ce0;
    end else begin
        s2_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s2_M_real_ce1 = grp_FFT_stage_2_fu_154_data_IN_M_real_ce1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_ce1 = grp_FFT_stage_1_fu_146_data_OUT_M_real_ce1;
    end else begin
        s2_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_we0 = grp_FFT_stage_1_fu_146_data_OUT_M_real_we0;
    end else begin
        s2_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s2_M_real_we1 = grp_FFT_stage_1_fu_146_data_OUT_M_real_we1;
    end else begin
        s2_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_imag_address0 = grp_FFT_stage_3_fu_162_data_IN_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_address0 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_address0;
    end else begin
        s3_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_imag_address1 = grp_FFT_stage_3_fu_162_data_IN_M_imag_address1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_address1 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_address1;
    end else begin
        s3_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_imag_ce0 = grp_FFT_stage_3_fu_162_data_IN_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_ce0 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce0;
    end else begin
        s3_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_imag_ce1 = grp_FFT_stage_3_fu_162_data_IN_M_imag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_ce1 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_ce1;
    end else begin
        s3_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_we0 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_we0;
    end else begin
        s3_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_imag_we1 = grp_FFT_stage_2_fu_154_data_OUT_M_imag_we1;
    end else begin
        s3_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_real_address0 = grp_FFT_stage_3_fu_162_data_IN_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_address0 = grp_FFT_stage_2_fu_154_data_OUT_M_real_address0;
    end else begin
        s3_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_real_address1 = grp_FFT_stage_3_fu_162_data_IN_M_real_address1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_address1 = grp_FFT_stage_2_fu_154_data_OUT_M_real_address1;
    end else begin
        s3_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_real_ce0 = grp_FFT_stage_3_fu_162_data_IN_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_ce0 = grp_FFT_stage_2_fu_154_data_OUT_M_real_ce0;
    end else begin
        s3_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s3_M_real_ce1 = grp_FFT_stage_3_fu_162_data_IN_M_real_ce1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_ce1 = grp_FFT_stage_2_fu_154_data_OUT_M_real_ce1;
    end else begin
        s3_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_we0 = grp_FFT_stage_2_fu_154_data_OUT_M_real_we0;
    end else begin
        s3_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s3_M_real_we1 = grp_FFT_stage_2_fu_154_data_OUT_M_real_we1;
    end else begin
        s3_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_imag_address0 = grp_FFT_stage_4_fu_174_data_IN_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_address0 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_address0;
    end else begin
        s4_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_imag_address1 = grp_FFT_stage_4_fu_174_data_IN_M_imag_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_address1 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_address1;
    end else begin
        s4_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_imag_ce0 = grp_FFT_stage_4_fu_174_data_IN_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_ce0 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce0;
    end else begin
        s4_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_imag_ce1 = grp_FFT_stage_4_fu_174_data_IN_M_imag_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_ce1 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_ce1;
    end else begin
        s4_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_we0 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_we0;
    end else begin
        s4_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_imag_we1 = grp_FFT_stage_3_fu_162_data_OUT_M_imag_we1;
    end else begin
        s4_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_real_address0 = grp_FFT_stage_4_fu_174_data_IN_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_address0 = grp_FFT_stage_3_fu_162_data_OUT_M_real_address0;
    end else begin
        s4_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_real_address1 = grp_FFT_stage_4_fu_174_data_IN_M_real_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_address1 = grp_FFT_stage_3_fu_162_data_OUT_M_real_address1;
    end else begin
        s4_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_real_ce0 = grp_FFT_stage_4_fu_174_data_IN_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_ce0 = grp_FFT_stage_3_fu_162_data_OUT_M_real_ce0;
    end else begin
        s4_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s4_M_real_ce1 = grp_FFT_stage_4_fu_174_data_IN_M_real_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_ce1 = grp_FFT_stage_3_fu_162_data_OUT_M_real_ce1;
    end else begin
        s4_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_we0 = grp_FFT_stage_3_fu_162_data_OUT_M_real_we0;
    end else begin
        s4_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s4_M_real_we1 = grp_FFT_stage_3_fu_162_data_OUT_M_real_we1;
    end else begin
        s4_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln38_fu_194_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln38_fu_194_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_FFT_stage_fu_138_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_FFT_stage_1_fu_146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_FFT_stage_2_fu_154_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_FFT_stage_3_fu_162_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_FFT_stage_4_fu_174_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln38_fu_200_p2 = (n_fu_62 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign data_IN_address0 = zext_ln39_fu_216_p1;

assign data_OUT_d1 = grp_FFT_stage_4_fu_174_data_OUT_d1;

assign grp_FFT_stage_1_fu_146_ap_start = grp_FFT_stage_1_fu_146_ap_start_reg;

assign grp_FFT_stage_2_fu_154_ap_start = grp_FFT_stage_2_fu_154_ap_start_reg;

assign grp_FFT_stage_3_fu_162_ap_start = grp_FFT_stage_3_fu_162_ap_start_reg;

assign grp_FFT_stage_4_fu_174_ap_start = grp_FFT_stage_4_fu_174_ap_start_reg;

assign grp_FFT_stage_fu_138_ap_start = grp_FFT_stage_fu_138_ap_start_reg;

assign icmp_ln38_fu_194_p2 = ((n_fu_62 == 6'd32) ? 1'b1 : 1'b0);

assign rev_32_address0 = zext_ln38_fu_206_p1;

assign zext_ln38_fu_206_p1 = n_fu_62;

assign zext_ln39_fu_216_p1 = rev_32_q0;

always @ (posedge ap_clk) begin
    zext_ln38_reg_231[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln38_reg_231_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //FFT
